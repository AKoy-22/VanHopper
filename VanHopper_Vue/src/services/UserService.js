import http from '../http-common';

class UserService{
    loginUser(data){
        return http.post("/login", data)
    }

    createUser(data){//id, email, phone
        return http.post("/users", data)
    }

    getRegisteredEvents(uid){
        return http.get(`/users/${uid}/events`)
   }

   deleteRegistration(eventId, userId){
        return http.delete(`/registrations/events/${eventId}/users/${userId}`) //autogenerated id
   }

   getAllUsers(){
        return http.get("/users")
   }

   getUnregisteredEvents(uid){
    return new Promise((resolve, reject)=>{
        this.getRegisteredEvents(uid) 
            .then(response=>{
                const regEvents=response.data;//list of event objects
                console.log(regEvents);
                http.get('/events')
                    .then(response=>{
                        const allEvents=response.data;
                        const unRegEvents=allEvents.filter((a)=>!((regEvents.map(r=>r.id)).includes(a.id)));
                        if(unRegEvents){
                            response.data=unRegEvents;
                            resolve(response);
                        }
                    })
                    .catch(error=>{
                        reject(error);
                    });
            })
            .catch(error=>{
                reject(error);
            })
    })

   }

   register(userId, eventId){
    //create json object 
    const newReg={
        "user.id":userId,
        "event.id":eventId
    }
    return http.post('/registrations', newReg)
    }
   deregister(eventId, userId){
    return http.delete(`registrations/events/${eventId}/users/${userId}`)
   }

   deleteUser(userId){
    return http.delete(`/users/${userId}`)
 }
}

export default new UserService();